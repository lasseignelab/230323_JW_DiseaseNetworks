Loading required package: igraph

Attaching package: ‘igraph’

The following objects are masked from ‘package:stats’:

    decompose, spectrum

The following object is masked from ‘package:base’:

    union

Loading required package: reticulate
Loading required package: pandaR
Loading required package: Biobase
Loading required package: BiocGenerics

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:igraph’:

    normalize, path, union

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, aperm, append, as.data.frame, basename, cbind,
    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,
    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,
    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,
    Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort,
    table, tapply, union, unique, unsplit, which.max, which.min

Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: yarn
Setting options('download.file.method.GEOquery'='auto')
Setting options('GEOquery.inmemory.gpl'=FALSE)
Loading required package: matrixcalc

Attaching package: ‘matrixcalc’

The following object is masked from ‘package:igraph’:

    %s%



Warning message:
replacing previous import ‘utils::findMatches’ by ‘S4Vectors::findMatches’ when loading ‘AnnotationForge’ 
Loading required package: ExperimentHub
Loading required package: AnnotationHub
Loading required package: BiocFileCache
Loading required package: dbplyr

Attaching package: ‘AnnotationHub’

The following object is masked from ‘package:Biobase’:

    cache

'select()' returned 1:many mapping between keys and columns
Joining with `by = join_by(h_sapiens_ensembl_id)`
Joining with `by = join_by(h_sapiens_ensembl_id)`
Iteration0: hamming distance =2.48523
Iteration1: hamming distance =0.58186
Iteration2: hamming distance =0.44177
Iteration3: hamming distance =0.38207
Iteration4: hamming distance =0.34054
Iteration5: hamming distance =0.30508
Iteration6: hamming distance =0.2725
Iteration7: hamming distance =0.24197
Iteration8: hamming distance =0.21345
Iteration9: hamming distance =0.18704
Iteration10: hamming distance =0.16287
Iteration11: hamming distance =0.14102
Iteration12: hamming distance =0.12146
Iteration13: hamming distance =0.10412
Iteration14: hamming distance =0.08888
Iteration15: hamming distance =0.07559
Iteration16: hamming distance =0.06406
Iteration17: hamming distance =0.05413
Iteration18: hamming distance =0.04561
Iteration19: hamming distance =0.03833
Iteration20: hamming distance =0.03215
Iteration21: hamming distance =0.0269
Iteration22: hamming distance =0.02247
Iteration23: hamming distance =0.01873
Iteration24: hamming distance =0.0156
Iteration25: hamming distance =0.01297
Iteration26: hamming distance =0.01076
Iteration27: hamming distance =0.00893
Iteration28: hamming distance =0.00739
Iteration29: hamming distance =0.00612
Iteration30: hamming distance =0.00506
Iteration31: hamming distance =0.00418
Iteration32: hamming distance =0.00345
Iteration33: hamming distance =0.00284
Iteration34: hamming distance =0.00234
Iteration35: hamming distance =0.00193
Iteration36: hamming distance =0.00159
Iteration37: hamming distance =0.00131
Iteration38: hamming distance =0.00107
Iteration39: hamming distance =0.00088
Successfully ran PANDA on 22932 Genes and 712 TFs.
Time elapsed:3154.22seconds.
Warning message:
In cor(t(expr), method = cor.method, use = "pairwise.complete.obs") :
  the standard deviation is zero
